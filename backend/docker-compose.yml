version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=biblioapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s

  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=biblioapp
      - PGUSER=postgres
      - PGPASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      # Node 18+ tiene fetch nativo (no necesitas curl/wget)
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/readyz').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 25s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
